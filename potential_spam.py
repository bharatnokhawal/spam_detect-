# -*- coding: utf-8 -*-
"""potential spam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IhxAh_89UNSaY9YU54WUjqwP4kaDgGUE
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Load your dataset
data = pd.read_csv('/content/spam.csv', encoding='latin1')



# Split the dataset into features (X) and labels (y)
X = data['v2']
y = data['v1']


# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Vectorize the text data using TF-IDF vectorizer
vectorizer = TfidfVectorizer(max_features=10000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Initialize and train a Naive Bayes classifier
classifier = MultinomialNB()
classifier.fit(X_train_tfidf, y_train)

# Make predictions on the test set
y_pred = classifier.predict(X_test_tfidf)

# Evaluate the model
print(classification_report(y_test, y_pred))

# Example of how to use
new_text = ["Congratulations! You've won a free vacation. Click here to claim your prize."]
new_text_tfidf = vectorizer.transform(new_text)
prediction = classifier.predict(new_text_tfidf)
print("Prediction:", prediction)

import pandas as pd

# Load your dataset

data = pd.read_csv('/content/spam.csv', encoding='latin1')

# Analyze each data entry for indications of phishing attempts
for index, row in data.iterrows():
    text = row['v2']

    # Check for sensitive requests
    sensitive_keywords = ['password', 'account', 'verification', 'login', 'social security', 'SSN']
    sensitive_request = any(keyword in text.lower() for keyword in sensitive_keywords)


    urgent_keywords = ['urgent', 'immediate', 'action required', 'verify now', 'limited time']
    urgent_prompt = any(keyword in text.lower() for keyword in urgent_keywords)

    solicitation_keywords = ['free', 'prize', 'claim', 'offer', 'click here']
    solicitation = any(keyword in text.lower() for keyword in solicitation_keywords)

    # Determine if the message is suspicious
    suspicious = sensitive_request or urgent_prompt or solicitation

    # Print the result for each data entry
    print(f"Data Entry {index}:")
    print(f"Text: {text}")
    print(f"Suspicious: {suspicious}")
    print("\n")